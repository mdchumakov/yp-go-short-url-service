// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLinkShortenerService is a mock of LinkShortenerService interface.
type MockLinkShortenerService struct {
	ctrl     *gomock.Controller
	recorder *MockLinkShortenerServiceMockRecorder
}

// MockLinkShortenerServiceMockRecorder is the mock recorder for MockLinkShortenerService.
type MockLinkShortenerServiceMockRecorder struct {
	mock *MockLinkShortenerService
}

// NewMockLinkShortenerService creates a new mock instance.
func NewMockLinkShortenerService(ctrl *gomock.Controller) *MockLinkShortenerService {
	mock := &MockLinkShortenerService{ctrl: ctrl}
	mock.recorder = &MockLinkShortenerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinkShortenerService) EXPECT() *MockLinkShortenerServiceMockRecorder {
	return m.recorder
}

// ShortURL mocks base method.
func (m *MockLinkShortenerService) ShortURL(ctx context.Context, longURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortURL", ctx, longURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShortURL indicates an expected call of ShortURL.
func (mr *MockLinkShortenerServiceMockRecorder) ShortURL(ctx, longURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortURL", reflect.TypeOf((*MockLinkShortenerService)(nil).ShortURL), ctx, longURL)
}

// MockLinkExtractorService is a mock of LinkExtractorService interface.
type MockLinkExtractorService struct {
	ctrl     *gomock.Controller
	recorder *MockLinkExtractorServiceMockRecorder
}

// MockLinkExtractorServiceMockRecorder is the mock recorder for MockLinkExtractorService.
type MockLinkExtractorServiceMockRecorder struct {
	mock *MockLinkExtractorService
}

// NewMockLinkExtractorService creates a new mock instance.
func NewMockLinkExtractorService(ctrl *gomock.Controller) *MockLinkExtractorService {
	mock := &MockLinkExtractorService{ctrl: ctrl}
	mock.recorder = &MockLinkExtractorServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinkExtractorService) EXPECT() *MockLinkExtractorServiceMockRecorder {
	return m.recorder
}

// ExtractLongURL mocks base method.
func (m *MockLinkExtractorService) ExtractLongURL(ctx context.Context, shortURL string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExtractLongURL", ctx, shortURL)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExtractLongURL indicates an expected call of ExtractLongURL.
func (mr *MockLinkExtractorServiceMockRecorder) ExtractLongURL(ctx, shortURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExtractLongURL", reflect.TypeOf((*MockLinkExtractorService)(nil).ExtractLongURL), ctx, shortURL)
}

// MockHealthCheckService is a mock of HealthCheckService interface.
type MockHealthCheckService struct {
	ctrl     *gomock.Controller
	recorder *MockHealthCheckServiceMockRecorder
}

// MockHealthCheckServiceMockRecorder is the mock recorder for MockHealthCheckService.
type MockHealthCheckServiceMockRecorder struct {
	mock *MockHealthCheckService
}

// NewMockHealthCheckService creates a new mock instance.
func NewMockHealthCheckService(ctrl *gomock.Controller) *MockHealthCheckService {
	mock := &MockHealthCheckService{ctrl: ctrl}
	mock.recorder = &MockHealthCheckServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthCheckService) EXPECT() *MockHealthCheckServiceMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockHealthCheckService) Ping(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockHealthCheckServiceMockRecorder) Ping(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockHealthCheckService)(nil).Ping), ctx)
}
